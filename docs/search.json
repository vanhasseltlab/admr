[{"path":"https://hiddevandebeek.github.io/admr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"H. van de Beek. Maintainer.","code":""},{"path":"https://hiddevandebeek.github.io/admr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van de Beek H, Välitalo P, Zwep L, van Hasselt J (2025). admr: Aggregate data modelling R. R package version 0.1.0, https://hiddevandebeek.github.io/admr.","code":"@Manual{,   title = {admr: Aggregate data modelling in R},   author = {H. {van de Beek} and P.A.J. Välitalo and L.B. Zwep and J.G.C {van Hasselt}},   year = {2025},   note = {R package version 0.1.0},   url = {https://hiddevandebeek.github.io/admr}, }"},{"path":"https://hiddevandebeek.github.io/admr/index.html","id":"admr-aggregate-data-modeling-in-r","dir":"","previous_headings":"","what":"Aggregate data modelling in R","title":"Aggregate data modelling in R","text":"admr (Aggregate Data Modeling R) open-source R package designed facilitate pharmacometric modeling using summary-level data. enables users work aggregate data, mean observations variance-covariance matrices, fit pharmacokinetic pharmacodynamic (PK/PD) models efficiently. package implements newly developed Expectation-Maximization (EM) algorithm enhance computational performance provides tools advanced modeling applications. Features Expectation-Maximization Algorithm: Efficiently fits pharmacometric models aggregate data, improving speed scalability compared Monte Carlo methods. Aggregate Data Flexibility: Allows integration summary-level data diverse sources, including published literature simulated models. Meta-Analysis Support: Facilitates model-based meta-analyses enabling combination summary data across studies. R Integration: Fully compatible R, leveraging popular pharmacometric modeling libraries like rxode2. Open-Source: Developed accessibility ease use pharmacometric community.","code":""},{"path":"https://hiddevandebeek.github.io/admr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Aggregate data modelling in R","text":"R package. R required, RStudio recommended. can install development version admr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"hiddevandebeek/admr\")"},{"path":"https://hiddevandebeek.github.io/admr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Aggregate data modelling in R","text":"basic example use admr fit pharmacokinetic model aggregate data:","code":"library(admr) ## basic example code"},{"path":"https://hiddevandebeek.github.io/admr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 H. van de Beek Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/admr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"admr: Aggregate data modelling in R — admr-package","title":"admr: Aggregate data modelling in R — admr-package","text":"novel method aggregate data model using non-linear estimation techniques.","code":""},{"path":[]},{"path":"https://hiddevandebeek.github.io/admr/reference/admr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"admr: Aggregate data modelling in R — admr-package","text":"H. van de Beek P..J. Välitalo","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/fitEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting aggregate data — fitEM","title":"Fitting aggregate data — fitEM","text":"fitEM() implements Expectation-Maximization(EM) algorithm parameter estimation given aggregate data model, iterating maximum likelihood updates weighted MC updates. version function uses nloptr instead optimx. TOL = 1e-10","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/fitEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting aggregate data — fitEM","text":"","code":"fitEM(   p0,   opts,   obs,   maxiter = 100,   convcrit_nll = 1e-05,   nomap = TRUE,   phase_fractions = c(0.2, 0.4, 0.2, 0.2),   max_worse_iterations = 10,   chains = 1,   pertubation = 0.1 )"},{"path":"https://hiddevandebeek.github.io/admr/reference/fitEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting aggregate data — fitEM","text":"p0 initial parameter values opts options obs observed data maxiter maximum number iterations convcrit_nll convergence criterion negative log-likelihood nomap single model multiple models phase_fractions vector phase fractions max_worse_iterations maximum number consecutive worse iterations skipping phase chains number chains pertubation pertubation factor initial parameter values chain","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/fitEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting aggregate data — fitEM","text":"fitted model","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/fitEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting aggregate data — fitEM","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/gendataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dataset — gendataset","title":"Generate a dataset — gendataset","text":"gendataset() generates dataset based model structure random effects, optional residual error.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/gendataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dataset — gendataset","text":"","code":"gendataset(opts, seed = 1, reserr = TRUE, nlmixrform = FALSE)"},{"path":"https://hiddevandebeek.github.io/admr/reference/gendataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dataset — gendataset","text":"opts list options seed seed random number generator reserr logical indicating whether residual error added nlmixrform logical indicating whether dataset nlmixr format","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/gendataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a dataset — gendataset","text":"dataset","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/gendataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a dataset — gendataset","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/genfitfunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a fitting function for optimization — genfitfunc","title":"Generate a fitting function for optimization — genfitfunc","text":"genfitfunc() generates fitting function optimization, taking observed data model options inputs.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genfitfunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a fitting function for optimization — genfitfunc","text":"","code":"genfitfunc(opts, obs)"},{"path":"https://hiddevandebeek.github.io/admr/reference/genfitfunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a fitting function for optimization — genfitfunc","text":"opts model options obs observed data","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genfitfunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a fitting function for optimization — genfitfunc","text":"fitting function","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genfitfunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a fitting function for optimization — genfitfunc","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/genopts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate options for optimization — genopts","title":"Generate options for optimization — genopts","text":"genopts() initializes generates core options settings modeling optimization, including random effects, simulation settings, likelihood approximations.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genopts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate options for optimization — genopts","text":"","code":"genopts(   f,   g,   xt,   p,   h,   nsim = 1,   n = 30,   adist = NULL,   interact = TRUE,   fo_appr = (nsim < 10),   biseq = NA,   omega_expansion = 1,   p_thetai = NA,   single_betas = NA )"},{"path":"https://hiddevandebeek.github.io/admr/reference/genopts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate options for optimization — genopts","text":"f likelihood function g model function xt data p parameter settings h error function nsim number simulations n number simulations adist distribution random effects interact Whether include interaction terms fo_appr Whether use first-order approximation biseq sequence random effects omega_expansion expansion factor omega matrix p_thetai theta matrix single_betas beta matrix","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genopts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate options for optimization — genopts","text":"fitted model","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/genopts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate options for optimization — genopts","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/meancov.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate options for optimization — meancov","title":"Generate options for optimization — meancov","text":"meancov() computes mean covariance matrix, optionally weights.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/meancov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate options for optimization — meancov","text":"","code":"meancov(m, wt)"},{"path":"https://hiddevandebeek.github.io/admr/reference/meancov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate options for optimization — meancov","text":"m matrix wt weights","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/meancov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate options for optimization — meancov","text":"list mean covariance","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/meancov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate options for optimization — meancov","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/plot.fitEM_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot diagnostics of fitEM results — plot.fitEM_result","title":"Plot diagnostics of fitEM results — plot.fitEM_result","text":"Plot diagnostics fitEM results","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/plot.fitEM_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot diagnostics of fitEM results — plot.fitEM_result","text":"","code":"# S3 method for class 'fitEM_result' plot(x, ...)"},{"path":"https://hiddevandebeek.github.io/admr/reference/plot.fitEM_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot diagnostics of fitEM results — plot.fitEM_result","text":"x fitted model object returned fitEM ... Additional arguments (used)","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/print.fitEM_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print fitEM results — print.fitEM_result","title":"Print fitEM results — print.fitEM_result","text":"Print fitEM results","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/print.fitEM_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print fitEM results — print.fitEM_result","text":"","code":"# S3 method for class 'fitEM_result' print(x, ...)"},{"path":"https://hiddevandebeek.github.io/admr/reference/print.fitEM_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print fitEM results — print.fitEM_result","text":"x fitted model object returned fitEM ... Additional arguments (used)","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/p_to_optim.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters to optimizable form — p_to_optim","title":"Parameters to optimizable form — p_to_optim","text":"p_to_optim() Converts parameter list form can optimized, returning transformed values, back-transformation functions, derivatives.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/p_to_optim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters to optimizable form — p_to_optim","text":"","code":"p_to_optim(p)"},{"path":"https://hiddevandebeek.github.io/admr/reference/p_to_optim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters to optimizable form — p_to_optim","text":"p parameter list","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/p_to_optim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters to optimizable form — p_to_optim","text":"optimized parameter list","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/p_to_optim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameters to optimizable form — p_to_optim","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/timedbobyqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting aggregate data — timedbobyqa","title":"Fitting aggregate data — timedbobyqa","text":"timedbobyqa() implements bobqa algorithm parameter estimation given aggregate data model, iterating maximum likelihood updates MC updates. iteration creates new MC samples updates parameter values. used compare performance old new implementation aggregate data modelling.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedbobyqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting aggregate data — timedbobyqa","text":"","code":"timedbobyqa(p0, opts, obs)"},{"path":"https://hiddevandebeek.github.io/admr/reference/timedbobyqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting aggregate data — timedbobyqa","text":"p0 initial parameter values opts options obs observed data","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedbobyqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting aggregate data — timedbobyqa","text":"fitted model","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedbobyqa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting aggregate data — timedbobyqa","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/reference/timedEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting aggregate data — timedEM","title":"Fitting aggregate data — timedEM","text":"timedEM() implements Expectation-Maximization(EM) algorithm parameter estimation given aggregate data model, iterating maximum likelihood updates weighted MC updates. used compare performance old new implementation aggregate data modelling.","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting aggregate data — timedEM","text":"","code":"timedEM(p0, opts, obs, maxiter = 100, convcrit_nll = 5e-04, nomap = TRUE)"},{"path":"https://hiddevandebeek.github.io/admr/reference/timedEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting aggregate data — timedEM","text":"p0 initial parameter values opts options obs observed data maxiter maximum number iterations convcrit_nll convergence criterion negative log-likelihood nomap single model multiple models","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting aggregate data — timedEM","text":"fitted model","code":""},{"path":"https://hiddevandebeek.github.io/admr/reference/timedEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting aggregate data — timedEM","text":"","code":"#test"},{"path":"https://hiddevandebeek.github.io/admr/news/index.html","id":"admr-010","dir":"Changelog","previous_headings":"","what":"admr 0.1.0","title":"admr 0.1.0","text":"Initial CRAN submission.","code":""}]
