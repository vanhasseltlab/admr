% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genfitfunc.R
\name{genfitfunc}
\alias{genfitfunc}
\title{Generate a fitting function for optimization}
\usage{
genfitfunc(opts, obs)
}
\arguments{
\item{opts}{A list of model options generated by \code{genopts()}. Contains settings for the model,
including:
\itemize{
\item \code{f}: Prediction function for the model
\item \code{time}: Vector of observation times
\item \code{p}: List of parameter values and structure
\item \code{nsim}: Number of Monte Carlo samples
\item \code{n}: Number of individuals
\item \code{pt}: Parameter values on transformed scale
\item \code{ptrans}: Parameter transformation function
}}

\item{obs}{Observed data in one of two formats:
1. Aggregate form: List with elements:
- \code{E}: Vector of means for each time point
- \code{V}: Covariance matrix of observations
2. Raw data matrix:
- Rows: Individual observations (nsim)
- Columns: Time points}
}
\value{
A function with signature \verb{function(p, givedetails = FALSE, opts_overrides)} where:
\itemize{
\item \code{p}: Parameter values (transformed or untransformed)
\item \code{givedetails}: If TRUE, returns additional attributes:
- \code{EV}: Expected values (mean and covariance)
- \code{obs}: Observed data
- \code{nllfun}: Negative log-likelihood function
- \code{opts}: Model options used
\item \code{opts_overrides}: Optional list to override model options
\item Returns: Negative log-likelihood value
}
}
\description{
\code{genfitfunc} generates a fitting function for optimization that computes the negative
log-likelihood of the model given the observed data and current parameter estimates.
The function handles both raw data and aggregate data (mean and covariance) formats.
}
\details{
Algorithm Steps:
\itemize{
\enumerate{
\item Data Preparation:
\itemize{
\item Validates input data format
\item Converts raw data to aggregate form if needed
\item Uses expected data if observations not provided
}
\item Parameter Processing:
\itemize{
\item Handles both transformed and untransformed parameters
\item Updates model options with current parameters
}
\item Likelihood Computation:
\itemize{
\item Generates expected values using \code{gen_pop_EV}
\item Computes covariance matrix inverse
\item Calculates negative log-likelihood
}
\item Error Handling:
\itemize{
\item Checks for matrix inversion problems
\item Validates data dimensions
\item Ensures proper parameter transformations
}
}
}

Mathematical Details:
\itemize{
\item Negative Log-Likelihood:
\deqn{-2\log L = n\log|V| + (y - \mu)^T V^{-1} (y - \mu)}
where:
- n: Number of individuals
- V: Model-predicted covariance matrix
- y: Observed means
- Î¼: Model-predicted means

\item Parameter Transformations:
- Log transform for positive parameters
- Logit transform for bounded parameters
- Identity for unrestricted parameters
}
}
\examples{
# Create test data with a one-compartment model
test_data <- create_test_data()
opts <- test_data$opts
obs <- test_data$obs

# Generate fitting function with aggregate data
fitfun <- genfitfunc(opts, obs)

# Evaluate likelihood at initial parameters
nll <- fitfun(opts$pt)

# Get detailed output including expected values
nll_detailed <- fitfun(opts$pt, givedetails = TRUE)

}
